server:
  port: 8080
  netty:
    connection-timeout: 30s
    idle-timeout: 60s

spring:
  application:
    name: api-gateway
  # Redis configuration for rate limiting (optional)
  # Uncomment to enable Redis-based rate limiting
  # data:
  #   redis:
  #     host: localhost
  #     port: 6379
  #     timeout: 2000ms
  #     lettuce:
  #       pool:
  #         max-active: 10
  #         max-idle: 10
  #         min-idle: 1
  
  # Gateway configuration
  cloud:
    compatibility-verifier:
      enabled: false
    gateway:
      # Global filters
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - AddResponseHeader=X-Response-Default-Foo, Default-Bar
      
      # CORS configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            allowedHeaders:
              - "*"
            allowCredentials: true
            exposedHeaders:
              - Authorization
              - X-Total-Count
              - X-Request-ID
              - X-RateLimit-Remaining
              - X-RateLimit-Retry-After-Seconds
      
      # Discovery configuration
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          
    # Circuit breaker configuration
    circuitbreaker:
      resilience4j:
        enabled: true
        
  # Security configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090/realms/booking-platform
          jwk-set-uri: http://localhost:8090/realms/booking-platform/protocol/openid_connect/certs

# Eureka configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    metadata-map:
      version: 1.0.0
      description: "API Gateway for booking platform"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,circuitbreakers,circuitbreakerevents,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
      show-components: when_authorized
    gateway:
      enabled: true
  health:
    circuitbreakers:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Resilience4j circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      user-service-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 3
        register-health-indicator: true
      booking-service-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 3
        register-health-indicator: true
      business-service-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 3
        register-health-indicator: true
      payment-service-cb:
        sliding-window-size: 8
        minimum-number-of-calls: 4
        failure-rate-threshold: 40
        wait-duration-in-open-state: 45s
        permitted-number-of-calls-in-half-open-state: 2
        register-health-indicator: true
  timelimiter:
    instances:
      user-service-cb:
        timeout-duration: 10s
      booking-service-cb:
        timeout-duration: 15s
      business-service-cb:
        timeout-duration: 10s
      payment-service-cb:
        timeout-duration: 20s

# Logging configuration
logging:
  level:
    com.project.apigateway: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.security: DEBUG
    org.springframework.web.reactive: DEBUG
    io.github.resilience4j: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{requestId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{requestId:-}] %logger{36} - %msg%n"
  file:
    name: logs/api-gateway.log

# Custom application properties
app:
  gateway:
    rate-limit:
      default:
        requests-per-minute: 60
        window-size-seconds: 60
      auth:
        requests-per-minute: 20
        window-size-seconds: 60
      payment:
        requests-per-minute: 30
        window-size-seconds: 60
    cors:
      allowed-origins: 
        - "http://localhost:3000"
        - "http://localhost:4200"
        - "https://yourdomain.com"
    security:
      public-endpoints:
        - "/actuator/health"
        - "/actuator/info"
        - "/api/auth/**"
        - "/api/v*/providers"
        - "/api/v*/providers/**"
        - "/api/v*/business-owners/business/**"
        - "/api/v*/business-owners/search"